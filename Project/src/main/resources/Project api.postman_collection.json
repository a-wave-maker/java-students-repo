{
	"info": {
		"_postman_id": "5dd21e7a-0a20-4228-aa71-fd2c282d8a6f",
		"name": "Project api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32304719"
	},
	"item": [
		{
			"name": "Courses",
			"item": [
				{
					"name": "courses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be an array of length 1\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(3);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/courses",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"courses"
							]
						}
					},
					"response": []
				},
				{
					"name": "courses/courseName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should have course details\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.eql(\"Biology\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/courses/{{courseName}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "courses/nonexistentCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 Not Found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/course/nonexistent",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"course",
								"nonexistent"
							]
						}
					},
					"response": []
				},
				{
					"name": "courses/courseName/students",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be an array of 5\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/courses/{{courseName}}/students",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseName}}",
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "courses/courseName/students-not-in-course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be an array of 5\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/courses/{{courseName}}/students-not-in-course",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseName}}",
								"students-not-in-course"
							]
						}
					},
					"response": []
				},
				{
					"name": "courses/courseName/student/studentId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should have updated course details\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.eql(\"Biology\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/courses/{{courseName}}/student/{{studentId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseName}}",
								"student",
								"{{studentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "courses/courseName/students (added a student)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be an array\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(6);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/courses/{{courseName}}/students",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseName}}",
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "courses/courseName/studentAlreadyIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409 Conflict\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/courses/{{courseName}}/student/{{studentId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseName}}",
								"student",
								"{{studentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "courses/courseName/studentId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should have updated course details\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.eql(\"Biology\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/courses/{{courseName}}/student/{{studentId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseName}}",
								"student",
								"{{studentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "courses/courseName/students (removed a student)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be an array\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/courses/{{courseName}}/students",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseName}}",
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "courses/courseName/studentNotIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 Not Found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/course/{{courseName}}/student/{{studentId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"course",
								"{{courseName}}",
								"student",
								"{{studentId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Faculties",
			"item": [
				{
					"name": "faculties",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be an array\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(2);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/faculties",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"faculties"
							]
						}
					},
					"response": []
				},
				{
					"name": "faculties/facultyName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should have faculty details\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.eql(\"Faculty of Science\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/faculties/{{facultyName}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"faculties",
								"{{facultyName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "faculties/nonexistentFaculty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 Not Found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/faculties/nonexistent",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"faculties",
								"nonexistent"
							]
						}
					},
					"response": []
				},
				{
					"name": "faculties",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should have created faculty details\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.name).to.eql(\"NewFaculty\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/faculties?name=NewFaculty",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"faculties"
							],
							"query": [
								{
									"key": "name",
									"value": "NewFaculty"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "faculties/facultyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 204', function () {",
									"    pm.response.to.have.status(204);",
									"})",
									"",
									"pm.test(\"Response should be empty\", function () {",
									"    pm.expect(pm.response.text()).to.be.empty;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/faculties/{{facultyId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"faculties",
								"{{facultyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "faculties/nonexistentFaculty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/faculties/nonexistent",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"faculties",
								"nonexistent"
							]
						}
					},
					"response": []
				},
				{
					"name": "courses (cascade test)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be an array of length 1\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(1);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/courses",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"courses"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Students",
			"item": [
				{
					"name": "students",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be an array\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.expect(Object.keys(pm.response.json()).length).to.eql(5);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/students",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "students/studentId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should have student details\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.id).to.eql(9)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/students/{{studentId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"students",
								"{{studentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "students/nonexistent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 Not Found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/students/999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"students",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "students/search/results",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be a paginated list\", function () {\r",
									"    pm.response.to.be.json;\r",
									"    pm.response.to.be.json;\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.content).to.exist;\r",
									"    pm.expect(responseJson.totalPages).to.eql(1)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/students/search/results?surname=Surname6&birthday=2006-01-01&index=100006&enrolled=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"students",
								"search",
								"results"
							],
							"query": [
								{
									"key": "surname",
									"value": "Surname6"
								},
								{
									"key": "birthday",
									"value": "2006-01-01"
								},
								{
									"key": "index",
									"value": "100006"
								},
								{
									"key": "enrolled",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "facultyId",
			"value": "1"
		}
	]
}